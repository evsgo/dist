// Reset the box-sizing (content-box)
* {
  @include box-sizing(border-box);
}
*:before,
*:after {
  @include box-sizing(border-box);
}

html {
  position: relative;
  min-height: 100%;
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  line-height: 1.4;
  color: #222;
}

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background-color: $body-bg;
}


// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button {
  display: inline-block;
  background-color: transparent;
  border: none;
  outline: none;
}

// * These selection rule sets have to be separate.
// * Customize the background color to match your design.
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

.form-control::-moz-placeholder {
  text-transform: uppercase;
}

.form-control:-ms-input-placeholder {
  text-transform: uppercase;
}

.form-control::-webkit-input-placeholder {
  text-transform: uppercase;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

// Remove default fieldset styles.
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

// Allow only vertical resizing of textareas.
textarea {
  resize: vertical;
}

figure {
  margin: 0;
}

// Links
a {
  display: inline-block;
  color: $link-color;
  text-decoration: none;
}

// Responsive images
img {
  max-width: 100%;
  height: auto;
}

img, svg, [class^='icon-'] {
  display: inline-block;
  vertical-align: middle;
}

// Horizontal rules
hr {
  display: block;
  margin-top:    $line-height-computed;
  margin-bottom: $line-height-computed;
  border-top: 1px solid $hr-border;
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}